<?php

namespace DoctrineORMModule\Proxy\__CG__\Database\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Address extends \Database\Entity\Address implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'addressId', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'addressType', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'streetLandmark', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'zipcode', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'recordStatus', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'province', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'city', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'country', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'customer');
        }

        return array('__isInitialized__', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'addressId', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'addressType', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'streetLandmark', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'zipcode', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'recordStatus', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'province', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'city', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'country', '' . "\0" . 'Database\\Entity\\Address' . "\0" . 'customer');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Address $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getAddressId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getAddressId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddressId', array());

        return parent::getAddressId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddressType($addressType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddressType', array($addressType));

        return parent::setAddressType($addressType);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddressType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddressType', array());

        return parent::getAddressType();
    }

    /**
     * {@inheritDoc}
     */
    public function setStreetLandmark($streetLandmark)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStreetLandmark', array($streetLandmark));

        return parent::setStreetLandmark($streetLandmark);
    }

    /**
     * {@inheritDoc}
     */
    public function getStreetLandmark()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStreetLandmark', array());

        return parent::getStreetLandmark();
    }

    /**
     * {@inheritDoc}
     */
    public function setZipcode($zipcode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setZipcode', array($zipcode));

        return parent::setZipcode($zipcode);
    }

    /**
     * {@inheritDoc}
     */
    public function getZipcode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getZipcode', array());

        return parent::getZipcode();
    }

    /**
     * {@inheritDoc}
     */
    public function setRecordStatus($recordStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRecordStatus', array($recordStatus));

        return parent::setRecordStatus($recordStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getRecordStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecordStatus', array());

        return parent::getRecordStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setProvince(\Database\Entity\Provinces $province = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProvince', array($province));

        return parent::setProvince($province);
    }

    /**
     * {@inheritDoc}
     */
    public function getProvince()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProvince', array());

        return parent::getProvince();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity(\Database\Entity\Cities $city = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', array($city));

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', array());

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry(\Database\Entity\Countries $country = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', array($country));

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', array());

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomer(\Database\Entity\Customers $customer = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomer', array($customer));

        return parent::setCustomer($customer);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomer', array());

        return parent::getCustomer();
    }

}
